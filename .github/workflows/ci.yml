name: CI

on:
  push:
    branches: [ master ]
    tags:
      - "*"
  pull_request:
    branches: [ master ]

env:
  GO_VERSION: 1.17
  NODE_VERSION: 16.x
  WEB_DIR: web
  DIST: calcio
  DOCKER_IMAGE: royalmist/calcio

jobs:
  web:
    name: Web Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: ${{ env.WEB_DIR }}/node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm i --prefix ${{ env.WEB_DIR }}
      - name: Build Web
        run: npm run build --prefix ${{ env.WEB_DIR }}
      - name: Tar Dist
        run: tar -cf dist.tar ${{ env.WEB_DIR }}/dist
      - name: Archive Dist
        uses: actions/upload-artifact@v2
        with:
          name: web-dist
          path: dist.tar
          retention-days: 1

  build:
    name: Api Build
    needs: web
    runs-on: ubuntu-20.04
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Download Web Dist
        uses: actions/download-artifact@v2
        with:
          name: web-dist
      - name: Untar Dist
        run: |
          rm -rf ${{ env.WEB_DIR }}
          tar -xvf dist.tar
          rm dist.tar
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
      - name: Build Api
        run: go build
      - name: Archive Dist
        uses: actions/upload-artifact@v2
        with:
          name: build-dist
          path: ${{ env.DIST }}
          retention-days: 1

  analysis:
    name: Static Code Analysis
    needs: build
    runs-on: ubuntu-20.04
    env:
      GO111MODULE: on
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download Web Dist
        uses: actions/download-artifact@v2
        with:
          name: web-dist
      - name: Untar Dist
        run: |
          rm -rf ${{ env.WEB_DIR }}
          tar -xvf dist.tar
          rm dist.tar
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
      - name: Run Vet
        run: go vet ./...
      - name: Run Gosec Security Scanner
        run: |
          go get -u github.com/securego/gosec/v2/cmd/gosec
          gosec -exclude-dir ent ./...

  tests:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download Web Dist
        uses: actions/download-artifact@v2
        with:
          name: web-dist
      - name: Untar Dist
        run: |
          rm -rf ${{ env.WEB_DIR }}
          tar -xvf dist.tar
          rm dist.tar
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
      - name: Test
        run: go test -v ./...

  nightly:
    name: Nightly
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: build-dist
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  release:
    name: Release
    if: ${{ contains(github.ref, 'refs/tags/') }}
    needs:
      - analysis
      - tests
      - nightly
    runs-on: ubuntu-20.04
    steps:
      - name: Tag
        id: tagName
        uses: olegtarasov/get-tag@v2.1
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download dist
        uses: actions/download-artifact@v2
        with:
          name: build-dist
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ steps.tagName.outputs.tag }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  distribute:
    name: Distribution
    if: ${{ contains(github.ref, 'refs/tags/') }}
    needs:
      - analysis
      - tests
      - nightly
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        os: [ "linux", "darwin", "windows" ]
        arch: [ "amd64" ]
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
    steps:
      - name: Tag
        id: tagName
        uses: olegtarasov/get-tag@v2.1
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Download Web Dist
        uses: actions/download-artifact@v2
        with:
          name: web-dist
      - name: Untar Dist
        run: |
          rm -rf ${{ env.WEB_DIR }}
          tar -xvf dist.tar
          rm dist.tar
      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
      - name: Build Api
        run: go build
      - name: Archive Dist
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.DIST }}-${{ matrix.os }}-${{ matrix.arch }}-${{ steps.tagName.outputs.tag }}
          path: ${{ env.DIST }}*
          retention-days: 30
