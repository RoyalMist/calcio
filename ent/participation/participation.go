// Code generated by entc, DO NOT EDIT.

package participation

const (
	// Label holds the string label denoting the participation type in the database.
	Label = "participation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGoals holds the string denoting the goals field in the database.
	FieldGoals = "goals"
	// EdgeGame holds the string denoting the game edge name in mutations.
	EdgeGame = "game"
	// EdgeTeam holds the string denoting the team edge name in mutations.
	EdgeTeam = "team"
	// Table holds the table name of the participation in the database.
	Table = "participations"
	// GameTable is the table that holds the game relation/edge.
	GameTable = "participations"
	// GameInverseTable is the table name for the Game entity.
	// It exists in this package in order to avoid circular dependency with the "game" package.
	GameInverseTable = "games"
	// GameColumn is the table column denoting the game relation/edge.
	GameColumn = "participation_game"
	// TeamTable is the table that holds the team relation/edge.
	TeamTable = "participations"
	// TeamInverseTable is the table name for the Team entity.
	// It exists in this package in order to avoid circular dependency with the "team" package.
	TeamInverseTable = "teams"
	// TeamColumn is the table column denoting the team relation/edge.
	TeamColumn = "participation_team"
)

// Columns holds all SQL columns for participation fields.
var Columns = []string{
	FieldID,
	FieldGoals,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "participations"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"participation_game",
	"participation_team",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultGoals holds the default value on creation for the "goals" field.
	DefaultGoals int
	// GoalsValidator is a validator for the "goals" field. It is called by the builders before save.
	GoalsValidator func(int) error
)
